cd2ag10報告(2ag10)
====

以下為各週報告

第八週報告
====

```python 
import cherrypy
class HelloWorld(object):
    @cherrypy.expose
    def index(self, var1=9, var2=9):
        # initialize outstring
        outstring = ""
        # initialize count
        count = 0
        d = int(var1)
        e = int(var2)+1
        for i in range(1, d):
            for j in range(1, e):
                count += 1
                #print(count)
                if count%(int(var2)) == 0:
                    outstring += "<td>"+str(i) + "*" + str(j) + "=" + str(i*j) +"</td>"+"</tr>" + "<br />"
                else:
                    outstring += "<td>"+str(i) + "x" + str(j) + "=" + str(i*j) + "</td>"
        return "<table border=2><tr><td>99乘法表</td></tr><tr>"+outstring
#http://127.0.0.1:8080/index?var1=10&var2=20
#"&nbsp;"*4
 
 
cherrypy.quickstart(HelloWorld())
#application=cherrypy.Application(HelloWorld()) #將符號打開上傳openshift即可使用，並刪掉上列
```

以上程式碼即可跑出99乘法表.

9x9openshift: http://9x9-cadp13ag8.rhcloud.com/ (因openshift空間不足，故利用第九週程式，程式碼略有差別，主要為多新增兩個輸入表單，其餘相同)

同步bitbucket: https://bitbucket.org/40123153/input9x9 (同上)

————我是分隔線————

影片(由於網路超慢，怕錄製影片過大所以只錄製最後結果)

https://vimeo.com/92003966

P.S 由於題目理解錯誤，所以上述影片為失效。

第九週報告
====

第一題:

Log以10為底之表單openshift: http://log-cadp13ag8.rhcloud.com/

bitbucket: https://bitbucket.org/40123153/log10-1.00-1.99

因為迴圈關係，多了一個21…還在更新中。(解決)

P.S已利用elif判斷式將最後的21給剃除！

當在最後20的地方下elif將<tr>給剃除，故不在往下做表格及列印出21數字。

```python 
import cherrypy
import os
import math
# 1. 導入所需模組

# 2. 設定近端與遠端目錄
# 確定程式檔案所在目錄, 在 Windows 有最後的反斜線
_curdir = os.path.join(os.getcwd(), os.path.dirname(__file__))
# 設定在雲端與近端的資料儲存目錄
if 'OPENSHIFT_REPO_DIR' in os.environ.keys():
    # 表示程式在雲端執行
    download_root_dir = os.environ['OPENSHIFT_DATA_DIR']
    data_dir = os.environ['OPENSHIFT_DATA_DIR']
else:
    # 表示程式在近端執行
    download_root_dir = _curdir + "/local_data/"
    data_dir = _curdir + "/local_data/"
 
# 3. 建立主物件
class HelloWorld(object):
    @cherrypy.expose
    def index2(self, input1=None, input2=None):
        return "Hello world!"+str(input1)
    @cherrypy.expose
    def inputform(self, input1=None, input2=None):
        return "input form"+str(input1)
    #index.exposed = True
    @cherrypy.expose
    def index(self):
        out=""
        c = 0
        k = 0
        for i in range(0,11):
            for j in range (0,10):
                k += 1
                c = 10 + i
                d = c/10+j/100
                e = (int(math.log(d,10)*10000))
                if (k%10 == 0 and k<=100):
                    out += "<td>"+str(e)+"</td></tr><td>"+str(c+1)+"</td><br />"
                elif k%100 == 0:
                    out += "<td>"+str(e)+"</td><br />"
                else:
                    out +="<td>"+str(e) + "</td>"
                #print("log=",int(math.log(d,10)*10000))
            #print("\n")
        return "<table border=1><tr><td>x</td><td>0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td><td>9</td></tr><td>"+"10"+"</td>"+out
 
# 4. 安排啟動設定
# 配合程式檔案所在目錄設定靜態目錄或靜態檔案
application_conf = {'/static':{
        'tools.staticdir.on': True,
        'tools.staticdir.dir': _curdir+"/static"},
        '/downloads':{
        'tools.staticdir.on': True,
        'tools.staticdir.dir': data_dir+"/downloads"}
    }
 
# 5. 在近端或遠端啟動程式
# 利用 HelloWorld() class 產生案例物件
root = HelloWorld()
# 假如在 os 環境變數中存在 'OPENSHIFT_REPO_DIR', 表示程式在 OpenShift 環境中執行
if 'OPENSHIFT_REPO_DIR' in os.environ.keys():
    # 雲端執行啟動
    application = cherrypy.Application(root, config = application_conf)
else:
    # 近端執行啟動
    '''
    cherrypy.server.socket_port = 8083
    cherrypy.server.socket_host = '127.0.0.1'
    '''
    cherrypy.quickstart(root, config = application_conf)
```
 
————我是分隔線————

第二題:

9×9乘法表，並且有兩input可以改變9×9乘法表的範圍。例：input:9 and 20 則為9×20乘法表。

openshift: http://9x9-cadp13ag8.rhcloud.com/ (備註:i為前值，j為後值)

bitbucket: https://bitbucket.org/40123153/input9x9

```python 
import cherrypy
class HelloWorld(object):
    @cherrypy.expose
    def index(self, var1=9, var2=9):
        # initialize outstring
        outstring = ""
        # initialize count
        count = 0
        d = int(var1)+1
        e = int(var2)+1
        for i in range(1, d):
            for j in range(1, e):
                count += 1
                if count%int(var2) == 0:
                    outstring += "<td>"+str(i) + "*" + str(j) + "=" + str(i*j) +"</td>"+"</tr>" + "<br />"
                else:
                    outstring += "<td>"+str(i) + "x" + str(j) + "=" + str(i*j) + "</td>"
        return "<table border=3><tr><td>99乘法表</td></tr><tr>"+outstring+'''<br/><form method="POST" action="index">
                i 我是前值:<input type="text" name="var1"><br />
                j 我是後值:<input type="text" name="var2"><br />
                <input type="submit" value="send">
                </form>
                '''
#http://127.0.0.1:8080/index?var1=10&var2=20
 
 
#cherrypy.quickstart(HelloWorld())
application=cherrypy.Application(HelloWorld())
```

————我是分隔線————

第三題:

新增帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399。

影片解說: https://vimeo.com/92574166

首先，我們必須要先有abc001~abc399的帳號密碼值，故先用程式迴圈跑出。 (因為懶得寫輸出檔，或者是不熟悉所以不冒險去寫。）

將值複製至文件內將空白修掉，利用EXCEL把密碼在複製至B欄位。存成CSV檔

同樣利用文件將逗點修掉(如果沒記錯空白處為一個TAB，為了安全還是複製之前的。)

再利用程式，修改讀取的文件，將密碼處改為數列[1](數列第一資料行位為[0]，第二資料故為[1])

跑出user之後利用FZ將檔案覆蓋，則可以在雲端上登錄。(為了確認完全傳入，將abc001改為管理權限，確認帳號輸入)

dokuwiki_openshift: http://dokuwiki-cadp13ag8.rhcloud.com/doku.php

bitbucket: https://bitbucket.org/40123153/dokuwiki_abc

第三題的程式碼實在不知道要打什麼….


